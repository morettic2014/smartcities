package br.com.moretic.vo;

// Generated by Hibernate Tools 4.0.0

import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * ShareViewWith generated by hbm2java
 */
@Entity
@Table(name = "share_view_with", schema = "public")
public class ShareViewWith implements java.io.Serializable {

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "idprofileUser", column = @Column(name = "idprofile_user", nullable = false)),
			@AttributeOverride(name = "iddataSource", column = @Column(name = "iddata_source", nullable = false)),
			@AttributeOverride(name = "idprofileOwner", column = @Column(name = "idprofile_owner", nullable = false)) })
	private ShareViewWithId id;

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "share_permissions_idshare_permissions", nullable = false)
	private SharePermissions sharePermissions;

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "idprofile_owner", referencedColumnName = "idprofile_owner", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "iddata_source", referencedColumnName = "iddata_source", nullable = false, insertable = false, updatable = false) })
	private ShareView shareView;

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idprofile_user", nullable = false, insertable = false, updatable = false)
	private Profile profile;

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "shareViewWith")
	private Set<ShareLog> shareLogs = new HashSet<ShareLog>(0);

	public ShareViewWith() {
	}

	public ShareViewWith(ShareViewWithId id, SharePermissions sharePermissions,
			ShareView shareView, Profile profile) {
		this.id = id;
		this.sharePermissions = sharePermissions;
		this.shareView = shareView;
		this.profile = profile;
	}

	public ShareViewWith(ShareViewWithId id, SharePermissions sharePermissions,
			ShareView shareView, Profile profile, Set<ShareLog> shareLogs) {
		this.id = id;
		this.sharePermissions = sharePermissions;
		this.shareView = shareView;
		this.profile = profile;
		this.shareLogs = shareLogs;
	}

	public ShareViewWithId getId() {
		return this.id;
	}

	public void setId(ShareViewWithId id) {
		this.id = id;
	}

	public SharePermissions getSharePermissions() {
		return this.sharePermissions;
	}

	public void setSharePermissions(SharePermissions sharePermissions) {
		this.sharePermissions = sharePermissions;
	}

	public ShareView getShareView() {
		return this.shareView;
	}

	public void setShareView(ShareView shareView) {
		this.shareView = shareView;
	}

	public Profile getProfile() {
		return this.profile;
	}

	public void setProfile(Profile profile) {
		this.profile = profile;
	}

	public Set<ShareLog> getShareLogs() {
		return this.shareLogs;
	}

	public void setShareLogs(Set<ShareLog> shareLogs) {
		this.shareLogs = shareLogs;
	}

}
