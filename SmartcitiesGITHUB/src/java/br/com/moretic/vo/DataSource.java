package br.com.moretic.vo;

// Generated by Hibernate Tools 4.0.0
import br.com.moretic.util.EnumDriverType;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Basic;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.PreUpdate;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Version;
import javax.xml.bind.annotation.XmlTransient;

import org.codehaus.jackson.annotate.JsonIgnore;

/**
 * DataSource generated by hbm2java
 */
@Entity
@Table(name = "data_source", schema = "public")
public class DataSource implements java.io.Serializable {

    @Id
    @SequenceGenerator(name = "data_source_seq", sequenceName = "data_source_iddata_source_seq", allocationSize = 1)
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "data_source_seq")
    @Column(name = "iddata_source", unique = true, nullable = false)
    private Long iddataSource;

    @Version
    @Column(name = "version")
    private Integer version = 1;
    
    @PreUpdate
    private void updateIt(){
        this.version++;
    }

    @Enumerated(EnumType.STRING)
    private EnumDriverType dataSourceDriver;

  

    @JsonIgnore
    @Column(name = "profile_idprofile", nullable = false, insertable = true, updatable = true)
    private Integer idProfile;

    @JsonIgnore
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "profile_idprofile", nullable = false, insertable = false, updatable = false)
    private Profile owner;

    @JsonIgnore
    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "iddata_source_relatedto", insertable = false, updatable = false)
    private DataSource dataSourceRelatedTo;

    @Column(name = "iddata_source_relatedto", insertable = true, updatable = true)
    private Integer idDataSourceRelatedTo;

    @Column(name = "de_datasource", length = 600)
    private String deSchema;

    @Column(name = "nm_datasource", length = 200)
    private String nmDatasource;

    @Column(name = "data_source_url", length = 250)
    private String dataSourceUrl;

    @Basic
    private Integer pport;

    @JsonIgnore
    @Column(name = "data_password", length = 45)
    private String dataPassword;

    @Column(name = "enabled")
    private Boolean enabled = true;

    @Column(name = "data_username", length = 45)
    private String dataUsername;

    @Column(name = "lat", length = 45)
    private String lat;

    @Column(name = "lon", length = 45)
    private String lon;

    @Column(name = "schema", length = 200)
    private String schema;

 
    @XmlTransient
    @JsonIgnore
    @OneToMany(fetch = FetchType.LAZY, mappedBy = "dataSource")
    private Set<ShareView> shareViews = new HashSet<ShareView>(0);

    public Long getIddataSource() {
        return this.iddataSource;
    }

    public void setIddataSource(Long iddataSource) {
        this.iddataSource = iddataSource;
    }

    public Integer getVersion() {
        return this.version;
    }

    public void setVersion(Integer version) {
        this.version = version;
    }

  

    public DataSource getDataSource() {
        return this.dataSourceRelatedTo;
    }

    public void setDataSource(DataSource dataSource) {
        this.dataSourceRelatedTo = dataSource;
    }

    public String getDeSchema() {
        return this.deSchema;
    }

    public void setDeSchema(String deSchema) {
        this.deSchema = deSchema;
    }

    public String getNmDatasource() {
        return this.nmDatasource;
    }

    public void setNmDatasource(String nmDatasource) {
        this.nmDatasource = nmDatasource;
    }

    public String getDataSourceUrl() {
        return this.dataSourceUrl;
    }

    public void setDataSourceUrl(String dataSourceUrl) {
        this.dataSourceUrl = dataSourceUrl;
    }

    public String getDataPassword() {
        return this.dataPassword;
    }

    public void setDataPassword(String dataPassword) {
        this.dataPassword = dataPassword;
    }

    public Boolean getEnabled() {
        return this.enabled;
    }

    public void setEnabled(Boolean enabled) {
        this.enabled = enabled;
    }

    public String getDataUsername() {
        return this.dataUsername;
    }

    public void setDataUsername(String dataUsername) {
        this.dataUsername = dataUsername;
    }

    public String getLat() {
        return this.lat;
    }

    public void setLat(String lat) {
        this.lat = lat;
    }

    public String getLon() {
        return this.lon;
    }

    public void setLon(String lon) {
        this.lon = lon;
    }

    public String getSchema() {
        return this.schema;
    }

    public void setSchema(String schema) {
        this.schema = schema;
    }

   

    public Set<ShareView> getShareViews() {
        return this.shareViews;
    }

    public void setShareViews(Set<ShareView> shareViews) {
        this.shareViews = shareViews;
    }

 

    public DataSource getDataSourceRelatedTo() {
        return dataSourceRelatedTo;
    }

    public void setDataSourceRelatedTo(DataSource dataSourceRelatedTo) {
        this.dataSourceRelatedTo = dataSourceRelatedTo;
    }

    public Integer getIdDataSourceRelatedTo() {
        return idDataSourceRelatedTo;
    }

    public void setIdDataSourceRelatedTo(Integer idDataSourceRelatedTo) {
        this.idDataSourceRelatedTo = idDataSourceRelatedTo;
    }

    public EnumDriverType getDataSourceDriver() {
        return dataSourceDriver;
    }

    public void setDataSourceDriver(EnumDriverType dataSourceDriver) {
        this.dataSourceDriver = dataSourceDriver;
    }

    public Integer getPport() {
        return pport;
    }

    public void setPport(Integer pport) {
        this.pport = pport;
    }

    public Integer getIdProfile() {
        return idProfile;
    }

    public void setIdProfile(Integer idProfile) {
        this.idProfile = idProfile;
    }

    public Profile getOwner() {
        return owner;
    }

    public void setOwner(Profile owner) {
        this.owner = owner;
    }

}
